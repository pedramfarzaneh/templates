// Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.
// For licensing, see LICENSE.md or http://ckeditor.com/license

.ck-button,
a.ck-button {
	@include ck-button-colors( 'button-default-background', 'button-default-border' );
	@include ck-rounded-corners();

	border-width: 1px;
	border-style: solid;
	white-space: nowrap;
	cursor: default;
	vertical-align: middle;
	padding: ck-spacing( 'small' );

	// Enable font size inheritance, which allows fluid UI scaling.
	font-size: inherit;

	&:focus {
		@include ck-focus-ring();
		@include ck-box-shadow( $ck-focus-outer-shadow );
	}

	@include ck-button-icon {
		float: left;
	}

	// https://github.com/ckeditor/ckeditor5-theme-lark/issues/70
	&.ck-disabled {
		@include ck-button-icon {
			@include ck-disabled;
		}

		// https://github.com/ckeditor/ckeditor5-theme-lark/issues/98
		.ck-button__label {
			@include ck-disabled;
		}
	}

	&.ck-button_with-text {
		padding: ck-spacing( 'small' ) ck-spacing();

		@include ck-button-icon {
			margin-left: -#{ck-spacing( 'small' )};
			margin-right: ck-spacing( 'small' );
		}

		.ck-button__label {
			display: block;
		}
	}

	// A style of the button which is currently on, e.g. its feature is active.
	&.ck-on {
		@include ck-button-colors( 'button-on-background', 'button-on-border' );
	}

	// A style of the button which handles the primary action.
	&-action {
		@include ck-button-colors( 'button-action-background', 'button-action-border' );

		text-shadow: 0 -1px ck-color( 'button-action-background', -20 );
		color: ck-color( 'button-action-text' );

		&:hover,
		&:focus,
		&:active {
			text-shadow: 0 -1px ck-color( 'button-action-background', -40 );
		}
	}

	&-bold {
		font-weight: bold;
	}

	.ck-icon {
		use,
		use * {
			color: inherit;
		}
	}

	.ck-button__label {
		// Enable font size inheritance, which allows fluid UI scaling.
		font-size: inherit;

		float: left;
		height: #{ $ck-line-height-base }em;
		line-height: inherit;
		font-weight: inherit;
		color: inherit;
		cursor: inherit;
	}
}
